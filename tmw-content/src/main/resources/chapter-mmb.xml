<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE book PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
                      "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd">
<chapter id="tmw-mmb">
  <title>Multi Module Builds</title>

  <para>
    This is a chapter about Multi-Module Builds (<abbrev>MMB</abbrev>).    
  </para>

  <section>
    <title>The Idea of a multi module build</title>

    <para>The basic idea of a multi module build is to have a 
      structure where i can put related modules together with
      the same release cycle and the same version number. This
      is usually the case if you are developing a JEE application,
      which consist of a server, client and a web module.
    </para>
    
    <para>This is also true if you have other related modules like
      an application (command line), a core-module and may be model-module.
      
    <programlisting>+-- parent (pom.xml)
      +--- cli (pom.xml)
      +--- core (pom.xml)
      +--- model (pom.xml)
</programlisting>
    
    </para>
      
  </section>


  <section>
    <title>The Default (Simple) Multi-Module-Build</title>

    <para>
    Define the default of a MMB. 
    Structure (folder layout)
    Version usage.
    
    <programlisting>+-- parent (pom.xml)
      +--- module-1 (pom.xml)
      +--- module-2 (pom.xml)
      +--- module-3 (pom.xml)
      ...    ...
      +--- module-n (pom.xml)
    </programlisting>
    </para>

  </section>

  <section>
    <title>The Complex Multi-Module-Build</title>

    <para>
    Structure (folder layout)
    Version usage.
    <programlisting>+-- parent (pom.xml)
      +--- module-1 (pom.xml)
               +--- module-1-1 (pom.xml)
               +--- module-1-2 (pom.xml)
      +--- module-2 (pom.xml)
      +--- module-3 (pom.xml)
               +--- module-3-1 (pom.xml)
               +--- module-3-2 (pom.xml)
      ...    ...
      +--- module-n (pom.xml)
    </programlisting>
    </para>

  </section>

  <section>
    <title>The Ugly Multi-Module-Build</title>

    <para>
    Structure (folder layout)
    Version usage.
    <programlisting>+-- root (pom.xml)
      +--- parent (pom.xml)
             ...   
      +--- module-1 (pom.xml)
      +--- module-2 (pom.xml)
             ...
      +--- module-n (pom.xml)
    </programlisting>
    </para>

  </section>

  <section>
    <title>The Multi-Module-Builds and Version Control</title>

    <para>
    Separated modules are in separated repositories (in particular in DVCS like Git) or
    just submodules with git? Is this the right direction?
    </para>

  </section>

  <section>
    <title>When you shouldn't use a multi module build?</title>

    <para>Try to explain under which circumstances you shouldn't use MMB?
    which reasons exist? separate deployment ? separate release cycles?
    </para>
    <para>If you are coming to the point and saying. I would like to
       release module A as version 1.0 whereas module B should be released as
       version 1.2 (see prog listing? reference?)
       
     <programlisting>+-- parent (pom.xml)
  +--- module-A (pom.xml)
  +--- module-B (pom.xml)
  +--- module-C (pom.xml)
  ...    ...
  +--- module-X (pom.xml)
</programlisting>
       
     </para>
     <para>The above is exactly an indication that you should not use a multi 
     module build. This will be handled by usual separated modules with their
     own release cycles. This does not prevent you in using inter project
     dependencies.</para>
  </section>

  <section>
    <title>MMB vs. Inheritance</title>

    <para>aggregation? </para>
  </section>
</chapter>
